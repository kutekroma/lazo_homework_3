# Задание 3
# Определите класс PiNum, хранящий значение числа Пи и включающий:
# конструктор, инициализирующий текущую точность представления числа Пи создаваемым экземпляром
# (по умолчанию два знака после запятой);
# переопределяемый магический метод str, возвращающий строку с текущим значением числа Пи;
# управляемый атрибут max_pi, хранящий значение числа Пи с максимальной точностью в 13 знаков
# после запятой и недоступный для изменения или удаления;
# метод set_pi_prec, устанавливающий значение атрибута cur_pi экземпляра для хранения значения
# числа Пи с текущей точностью (по умолчанию два знака после запятой).
# Используя созданный класс, создайте экземпляр числа Пи с точностью в три знака после запятой
# и выведите его строковое представление на экран. Измените точность представления числа до пяти
# знаков после запятой и выведите новое значение на экран.
# Также выведите на экран значение числа Пи с максимальной точностью.

#Выполнил Лазо Александр

class PiNum:
    #неизменяемое значение числа Пи с точностью до 13 знаков
    _max_pi = 3.1415926535897
    def __init__(self, accuracy: int = 2):
        self.accuracy = accuracy
        #число Пи с точностью два знака после запятой
        self.cur_pi = round(self._max_pi, self.accuracy)

    #метод, выводящий строку с текущим значением числа Пи
    def __str__(self):
        return f"{self.cur_pi}"

    #метод, хранящий значение числа Пи с максимальной точностью в 13 знаков
    @property
    def max_pi(self):
        return self._max_pi

    #метод устаналвивает значение с точностью до двух знаков
    def set_pi_prec(self, accuracy: int):
        self.accuracy = accuracy
        self.cur_pi = round(self._max_pi, self.accuracy)


if __name__ == '__main__':
    # Создание экземпляра числа Пи с точностью в три знака после запятой
    number_pi = PiNum(3)
    print(number_pi)

    # Меняем число Пи с точностью в пять знака после запятой
    number_pi.set_pi_prec(5)
    print(number_pi)

    # Вывод на экран значения числа Пи с максимальной точностью
    print(number_pi.max_pi)

    # тест метода max_pi
    print(number_pi.max_pi)